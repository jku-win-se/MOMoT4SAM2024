/**
 */
package fmuvb.impl;

import fmuvb.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class FmuvbFactoryImpl extends EFactoryImpl implements FmuvbFactory {
   /**
    * Creates the default factory implementation.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   public static FmuvbFactory init() {
      try {
         FmuvbFactory theFmuvbFactory = (FmuvbFactory)EPackage.Registry.INSTANCE.getEFactory(FmuvbPackage.eNS_URI);
         if (theFmuvbFactory != null) {
            return theFmuvbFactory;
         }
      }
      catch (Exception exception) {
         EcorePlugin.INSTANCE.log(exception);
      }
      return new FmuvbFactoryImpl();
   }

   /**
    * Creates an instance of the factory.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   public FmuvbFactoryImpl() {
      super();
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public EObject create(EClass eClass) {
      switch (eClass.getClassifierID()) {
         case FmuvbPackage.VEHICLE_BATTERY_FMU: return createVehicleBatteryFMU();
         case FmuvbPackage.PARAMETER: return createParameter();
         case FmuvbPackage.OUTPUT: return createOutput();
         default:
            throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
      }
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   public VehicleBatteryFMU createVehicleBatteryFMU() {
      VehicleBatteryFMUImpl vehicleBatteryFMU = new VehicleBatteryFMUImpl();
      return vehicleBatteryFMU;
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   public Parameter createParameter() {
      ParameterImpl parameter = new ParameterImpl();
      return parameter;
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   public Output createOutput() {
      OutputImpl output = new OutputImpl();
      return output;
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   public FmuvbPackage getFmuvbPackage() {
      return (FmuvbPackage)getEPackage();
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @deprecated
    * @generated
    */
   @Deprecated
   public static FmuvbPackage getPackage() {
      return FmuvbPackage.eINSTANCE;
   }

} //FmuvbFactoryImpl
