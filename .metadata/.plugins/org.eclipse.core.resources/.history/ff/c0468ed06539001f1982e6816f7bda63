/**
 */
package tms.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import tms.ArrangeableBlock;
import tms.TmsPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Arrangeable Block</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link tms.impl.ArrangeableBlockImpl#getId <em>Id</em>}</li>
 *   <li>{@link tms.impl.ArrangeableBlockImpl#getTypeId <em>Type Id</em>}</li>
 * </ul>
 *
 * @generated
 */
public abstract class ArrangeableBlockImpl extends MinimalEObjectImpl.Container implements ArrangeableBlock {
   /**
    * The default value of the '{@link #getId() <em>Id</em>}' attribute.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @see #getId()
    * @generated
    * @ordered
    */
   protected static final String ID_EDEFAULT = null;

   /**
    * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @see #getId()
    * @generated
    * @ordered
    */
   protected String id = ID_EDEFAULT;

   /**
    * The default value of the '{@link #getTypeId() <em>Type Id</em>}' attribute.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @see #getTypeId()
    * @generated
    * @ordered
    */
   protected static final String TYPE_ID_EDEFAULT = "";

   /**
    * The cached value of the '{@link #getTypeId() <em>Type Id</em>}' attribute.
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @see #getTypeId()
    * @generated
    * @ordered
    */
   protected String typeId = TYPE_ID_EDEFAULT;

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   protected ArrangeableBlockImpl() {
      super();
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   protected EClass eStaticClass() {
      return TmsPackage.Literals.ARRANGEABLE_BLOCK;
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public String getId() {
      return id;
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public void setId(String newId) {
      String oldId = id;
      id = newId;
      if (eNotificationRequired())
         eNotify(new ENotificationImpl(this, Notification.SET, TmsPackage.ARRANGEABLE_BLOCK__ID, oldId, id));
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public String getTypeId() {
      return typeId;
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public void setTypeId(String newTypeId) {
      String oldTypeId = typeId;
      typeId = newTypeId;
      if (eNotificationRequired())
         eNotify(new ENotificationImpl(this, Notification.SET, TmsPackage.ARRANGEABLE_BLOCK__TYPE_ID, oldTypeId, typeId));
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public Object eGet(int featureID, boolean resolve, boolean coreType) {
      switch (featureID) {
         case TmsPackage.ARRANGEABLE_BLOCK__ID:
            return getId();
         case TmsPackage.ARRANGEABLE_BLOCK__TYPE_ID:
            return getTypeId();
      }
      return super.eGet(featureID, resolve, coreType);
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public void eSet(int featureID, Object newValue) {
      switch (featureID) {
         case TmsPackage.ARRANGEABLE_BLOCK__ID:
            setId((String)newValue);
            return;
         case TmsPackage.ARRANGEABLE_BLOCK__TYPE_ID:
            setTypeId((String)newValue);
            return;
      }
      super.eSet(featureID, newValue);
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public void eUnset(int featureID) {
      switch (featureID) {
         case TmsPackage.ARRANGEABLE_BLOCK__ID:
            setId(ID_EDEFAULT);
            return;
         case TmsPackage.ARRANGEABLE_BLOCK__TYPE_ID:
            setTypeId(TYPE_ID_EDEFAULT);
            return;
      }
      super.eUnset(featureID);
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public boolean eIsSet(int featureID) {
      switch (featureID) {
         case TmsPackage.ARRANGEABLE_BLOCK__ID:
            return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
         case TmsPackage.ARRANGEABLE_BLOCK__TYPE_ID:
            return TYPE_ID_EDEFAULT == null ? typeId != null : !TYPE_ID_EDEFAULT.equals(typeId);
      }
      return super.eIsSet(featureID);
   }

   /**
    * <!-- begin-user-doc -->
    * <!-- end-user-doc -->
    * @generated
    */
   @Override
   public String toString() {
      if (eIsProxy()) return super.toString();

      StringBuilder result = new StringBuilder(super.toString());
      result.append(" (id: ");
      result.append(id);
      result.append(", typeId: ");
      result.append(typeId);
      result.append(')');
      return result.toString();
   }

} //ArrangeableBlockImpl
